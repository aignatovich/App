   
<br /><br />
<div>
    <div class="merri-400">
        <table class="" id="jqg"></table>
        <div id="jpager"></div>
    </div>
</div>
  
@using (Html.BeginForm("EditEmployee", "Employee", FormMethod.Get, new { @class = "", role = "" }))
{
    @Html.Hidden("Id", "", new { @id = "edit" });
    <td width="50">
        <input type="submit" id="editSubmit" value="Edit" class="btn btn-primary" style="visibility:hidden;"/>
    </td>
}  
@section Scripts
{
    @Styles.Render("~/Content/employee-jqgrid")    
    @Scripts.Render("~/bundles/jq")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqGrid") 

<script type="text/javascript">
    function DeleteAction(rowId) {
             if (confirm("Are you sure you want to remove this employee?") == true) {
                 var dataFromTheRow = $("#jqg").jqGrid('getRowData', rowId);;
                 $.ajax({
                     type: "POST",
                     url: "/Employee/RemoveEmployee",
                     data: { id: dataFromTheRow.Id },
                     datatype: "html",
                     success: function (data) {
                         $('#jqg').jqGrid('delRowData', rowId);
                     }
                 });
             } else {
                 return false;
             }
    }

    function EditAction(rowId) {
        if (confirm("Are you sure you want to edit this employee?") == true) {
            var dataFromTheRow = $("#jqg").jqGrid('getRowData', rowId);;
            var del = $('#edit');
            del.val(dataFromTheRow.Id);
            var o = $('#editSubmit');
            o.click();
        } else {
            return false;
        }
    }

    (function () {
        $("#jqg").jqGrid({
            url: '@Url.Action("GetEmployeeData")',
            styleUI : 'Bootstrap',
            datatype: "json",
            myType: 'GET',
            colNames: ['Id', 'Position', 'Name', 'Surname','',''],
            colModel: [
            { name: 'Id', label: 'Id', width: 30, stype: 'text' },
            { name: 'PositionValue', label: 'Position', width: 50, sortable: true },
            { name: 'Name', index: 'Name', width: 50, sortable: true },
            { name: 'Surname', label: 'Surname', width: 50, sortable: true },

             {
                 search: false,
                 width: 10,
                 formatter: function (cellvalue, options, rowObject) {
                     return '<span class="glyphicon glyphicon glyphicon-pencil" style="font-size: 25px;" onclick="EditAction(' + options.rowId + ');"></span>';
                 }
             } ,
            {
              search: false,
              width:10,
              formatter: function (cellvalue, options, rowObject) {
                  return ' <span class="glyphicon glyphicon glyphicon-trash" style="font-size: 25px;" onclick="DeleteAction(' + options.rowId + ');"></span>';
              },
            }

            ],
            rowNum: 100,
            sortname: 'Id',
            sortorder: "desc",
            caption: "Employee list",
            viewrecords: true,
            width: 980,
            height: 630,
            pager: '#jpager',
            jsonReader: {
                root: 'Employees',
                page: "Page",
                total: "TotalPages",
                records: "TotalRecords",
                id: "0",

            },
            onPaging: function () {
                $('.ui-jqgrid-bdiv').scrollTop(0);
            }
        });

        $('#jqg').jqGrid('filterToolbar', {
            stringResult: true,
        });

    })();
</script>
}

